#! /bin/sh

#================================================================
# sigsegv
# Simulate process crash by Segmentatin Fault
#================================================================


# set variables
testcmd="kchashtest"
mgrcmd="kchashmgr"
sleepsec=0.6
PATH="$PATH:."
LD_LIBRARY_PATH="/usr/local/lib:."
export PATH LD_LIBRARY_PATH


# parse arguments
case "$1" in
kct|tree)
  testcmd="kctreetest"
  mgrcmd="kctreemgr"
  ;;
kcd|dir)
  testcmd="kcdirtest"
  mgrcmd="kcdirmgr"
  ;;
kcf|forest)
  testcmd="kcforesttest"
  mgrcmd="kcforestmgr"
  ;;
esac


# enable libSegFault
#LD_PRELOAD="/lib/libSegFault.so"
#SEGFAULT_SIGNALS="all"
#SEGFAULT_OUTPUT_NAME="$testcmd.log"
#export LD_PRELOAD SEGFAULT_SIGNALS SEGFAULT_OUTPUT_NAME


# set the cleanup handler
rm -f stop.log
trap "touch stop.log" TERM INT
trap "killall $testcmd ; rm -f stop.log" EXIT


# infinite loop
while [ ! -f stop.log ]
do
  rm -rf casket* "$testcmd.log"
  "$testcmd" order -oat -th 1 casket 1000000 & ( sleep "$sleepsec" ; killall -SEGV "$testcmd" )
  cp -f casket casket-back
  cp -f casket.wal casket-back.wal
  printf '\n'
  if "$mgrcmd" check casket
  then
    true
  else
    break
  fi
done
printf "cp -f casket-back casket ; cp -f casket-back.wal casket.wal ; ./$mgrcmd check casket\n"


# exit normally
exit 0



# END OF FILE
